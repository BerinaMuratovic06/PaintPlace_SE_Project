{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Korisnik\\\\Desktop\\\\SE\\\\se-frontend\\\\src\\\\pages\\\\PaintingDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"../styles/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaintingDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [painting, setPainting] = useState(null);\n  useEffect(() => {\n    const loadPainting = async () => {\n      try {\n        // Make a request to your backend to fetch painting details\n        const response = await fetch(`http://localhost:3000/paintings/${id}`); // Adjust the URL if necessary\n        const data = await response.json();\n\n        // Log the data to verify it's correct\n        console.log(\"Fetched painting data:\", data);\n        setPainting(data); // Assuming the backend returns a single painting object\n      } catch (error) {\n        console.error(\"Error fetching painting details:\", error);\n      }\n    };\n    loadPainting();\n  }, [id]);\n  if (!painting) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading\",\n      children: \"Loading painting details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"details-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: painting.image,\n      alt: painting.name,\n      className: \"details-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: painting.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Artist:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 12\n        }, this), \" \", painting.artist]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 12\n        }, this), \" $\", painting.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Style:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 12\n        }, this), \" \", painting.style]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Size:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 12\n        }, this), \" \", painting.size]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(PaintingDetails, \"vUcPV9KJ9UBhegDlngT2/K51cfM=\", false, function () {\n  return [useParams];\n});\n_c = PaintingDetails;\nexport default PaintingDetails;\nvar _c;\n$RefreshReg$(_c, \"PaintingDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","PaintingDetails","_s","id","painting","setPainting","loadPainting","response","fetch","data","json","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","image","alt","name","artist","price","style","size","_c","$RefreshReg$"],"sources":["C:/Users/Korisnik/Desktop/SE/se-frontend/src/pages/PaintingDetails.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"../styles/style.css\";\r\n\r\nconst PaintingDetails = () => {\r\n  const { id } = useParams();\r\n  const [painting, setPainting] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const loadPainting = async () => {\r\n      try {\r\n        // Make a request to your backend to fetch painting details\r\n        const response = await fetch(`http://localhost:3000/paintings/${id}`); // Adjust the URL if necessary\r\n        const data = await response.json();\r\n        \r\n        // Log the data to verify it's correct\r\n        console.log(\"Fetched painting data:\", data);\r\n        \r\n        setPainting(data); // Assuming the backend returns a single painting object\r\n      } catch (error) {\r\n        console.error(\"Error fetching painting details:\", error);\r\n      }\r\n    };\r\n\r\n    loadPainting();\r\n  }, [id]);\r\n\r\n  if (!painting) {\r\n    return <p className=\"loading\">Loading painting details...</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"details-container\">\r\n      <img src={painting.image} alt={painting.name} className=\"details-image\" />\r\n      <div className=\"details-info\">\r\n        <h2>{painting.name}</h2>\r\n        <p><strong>Artist:</strong> {painting.artist}</p>\r\n        <p><strong>Price:</strong> ${painting.price}</p>\r\n        <p><strong>Style:</strong> {painting.style}</p>\r\n        <p><strong>Size:</strong> {painting.size}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaintingDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}